<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>配置 on 梁苏莉的博客</title>
    <link>https://liangsuli123.github.io/tags/%E9%85%8D%E7%BD%AE/</link>
    <description>Recent content in 配置 on 梁苏莉的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 22 Aug 2021 14:26:00 +0800</lastBuildDate>
    
	<atom:link href="https://liangsuli123.github.io/tags/%E9%85%8D%E7%BD%AE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>46个Linux面试常见问题送给你</title>
      <link>https://liangsuli123.github.io/posts/linux/linux_use/</link>
      <pubDate>Sun, 22 Aug 2021 14:26:00 +0800</pubDate>
      
      <guid>https://liangsuli123.github.io/posts/linux/linux_use/</guid>
      <description>问题一： 绝对路径用什么符号表示？当前目录、上层目录用什么表示？主目录用什么表示? 切换目录用什么命令？ 答案： 绝对路径： 如/etc/init.d 当前目录和上层目录： ./ ../ 主目录： ~/ 切换目录： cd 问题二： 怎么查</description>
    </item>
    
    <item>
      <title>linux查看硬件信息命令</title>
      <link>https://liangsuli123.github.io/posts/linux/a1/</link>
      <pubDate>Tue, 20 Jul 2021 14:26:00 +0800</pubDate>
      
      <guid>https://liangsuli123.github.io/posts/linux/a1/</guid>
      <description>Linux大部分操作是通过命令实现的，并不像windows那么直观。 linux查看硬件信息也是需要通过linux查看硬件信息命令查询的 系统 # uname -a # 查看内核/操作系统/CPU信息 # head -n 1 /etc/issue # 查看操作系统</description>
    </item>
    
    <item>
      <title>linux技巧让进程后台可靠运行的几种方法</title>
      <link>https://liangsuli123.github.io/posts/linux/a1/</link>
      <pubDate>Mon, 17 May 2021 14:26:00 +0800</pubDate>
      
      <guid>https://liangsuli123.github.io/posts/linux/a1/</guid>
      <description>我们经常会碰到这样的问题，用 telnet/ssh 登录了远程的 Linux 服务器，运行了一些耗时较长的任务， 结果却由于网络的 不稳定导致任务中途失败。如何让命令提交后不受本地关闭终端窗口/网络断开连接的干扰呢？下面举了一些例子， 您可</description>
    </item>
    
    <item>
      <title>在Centos下使用Siege对Django服务进行压力测试</title>
      <link>https://liangsuli123.github.io/posts/a10/</link>
      <pubDate>Fri, 22 Feb 2019 14:26:00 +0800</pubDate>
      
      <guid>https://liangsuli123.github.io/posts/a10/</guid>
      <description>Siege是linux下的一个web系统的压力测试工具，支持多链接，支持get和post请求，可以对web系统进行多并发下持续请求的压力测试。今天我们就使用Siege来对Django进行一次压力测试，</description>
    </item>
    
    <item>
      <title>在阿里云Centos7.6上利用docker搭建Jenkins来自动化部署Django项目</title>
      <link>https://liangsuli123.github.io/posts/a9/</link>
      <pubDate>Tue, 19 Feb 2019 14:26:00 +0800</pubDate>
      
      <guid>https://liangsuli123.github.io/posts/a9/</guid>
      <description>一般情况下，将一个项目部署到生产环境的流程如下： 需求分析—原型设计—开发代码—内网部署-提交测试—确认上线—备份数据—外网更新-最终测试，如果发现外网部署的代码有异常，需要及时回滚。 整个过程相当复杂而</description>
    </item>
    
    <item>
      <title>在阿里云服务器上使用Nginx部署https协议的网站</title>
      <link>https://liangsuli123.github.io/posts/a8/</link>
      <pubDate>Sun, 17 Feb 2019 14:26:00 +0800</pubDate>
      
      <guid>https://liangsuli123.github.io/posts/a8/</guid>
      <description>之前写过一篇文章是在阿里云服务器上用Apache切换https协议：将博客迁移阿里云并且切换成https解析的过程 这一次，换成使用Nginx来部署，相比之下，比Apache的配置要简单一些 如何申请SS</description>
    </item>
    
    <item>
      <title>python3.7.3操作FastDfs来进行文件操作</title>
      <link>https://liangsuli123.github.io/posts/a7/</link>
      <pubDate>Fri, 15 Feb 2019 14:26:00 +0800</pubDate>
      
      <guid>https://liangsuli123.github.io/posts/a7/</guid>
      <description>在之前的一篇文章中:利用Docker来搭建分布式文件系统FastDfs，我们已经搭建好了FastDfs分布式文件系统，并且已经可以通过命令进行上传操作，那么如何使用python来上传文件呢？ 很简单，还</description>
    </item>
    
    <item>
      <title>利用Docker来搭建分布式文件系统FastDfs</title>
      <link>https://liangsuli123.github.io/posts/a6/</link>
      <pubDate>Wed, 13 Feb 2019 14:26:00 +0800</pubDate>
      
      <guid>https://liangsuli123.github.io/posts/a6/</guid>
      <description>对于文件存储来说，一般情况下简单的处理就是在Django配置文件中配置存储目录，按照规则对文件进行上传 或者下载。 实际上，当文件较少的时候，Django是可以应付的过来的。但当文件以海量形式出现的时候，</description>
    </item>
    
    <item>
      <title>在阿里云Centos上配置nginx&#43;uwsgi&#43;负载均衡配置</title>
      <link>https://liangsuli123.github.io/posts/a5/</link>
      <pubDate>Wed, 13 Feb 2019 14:26:00 +0800</pubDate>
      
      <guid>https://liangsuli123.github.io/posts/a5/</guid>
      <description>负载均衡在服务端开发中算是一个比较重要的特性。因为Nginx除了作为常规的Web服务器外，还会被大规模的用于 反向代理后端，Nginx的异步框架可以处理很大的并发请求，把这些并发请求hold住之后就可以</description>
    </item>
    
    <item>
      <title>在阿里云Centos7.6上部署Supervisor来监控和操作各类服务 </title>
      <link>https://liangsuli123.github.io/posts/a4/</link>
      <pubDate>Tue, 29 Jan 2019 14:26:00 +0800</pubDate>
      
      <guid>https://liangsuli123.github.io/posts/a4/</guid>
      <description>Supervisor 是用Python开发的一个client/server服务，是Linux/Unix系统下的一个进程管理工具，不支持Windows系统。它可以很方便的监听、启动、停止、重启一个或多个进程。用Superv</description>
    </item>
    
    <item>
      <title>在阿里云centos7.6上部署vue.js2.6前端应用</title>
      <link>https://liangsuli123.github.io/posts/vue/a2/</link>
      <pubDate>Tue, 22 Jan 2019 14:26:00 +0800</pubDate>
      
      <guid>https://liangsuli123.github.io/posts/vue/a2/</guid>
      <description>在之前的一篇文章中详细阐述了如何部署Nginx代理uwsgi+django后台服务,现在轮到部署前端应用vue.js了，vue.js的好处就不多说了，其作为一个轻巧、高性能、可组件化的MVVM库，学习</description>
    </item>
    
    <item>
      <title>在阿里云Centos7.6中部署nginx1.16&#43;uwsgi2.0.18&#43;Django2.0.4</title>
      <link>https://liangsuli123.github.io/posts/a1/</link>
      <pubDate>Thu, 17 Jan 2019 14:26:00 +0800</pubDate>
      
      <guid>https://liangsuli123.github.io/posts/a1/</guid>
      <description>一直以来想写一篇完整的在阿里云服务器上部署Django服务结合uwsgi，并且通过nginx做反向代理。因为网上的攻略鱼龙混杂，加上技术不断更新，一些年代久远的文章很容易让人在部署的过程中掉坑里，无法</description>
    </item>
    
    <item>
      <title>centos 中 redis 的安装</title>
      <link>https://liangsuli123.github.io/posts/centos/</link>
      <pubDate>Mon, 30 May 2016 14:26:00 +0800</pubDate>
      
      <guid>https://liangsuli123.github.io/posts/centos/</guid>
      <description>centos 中 redis 的安装 安装流程 Wget http://download.redis.io/releases/redis-5.0.4.tar.gz tar xzf redis-5.0.4.tar.gz mv redis-5.0.4 /usr/local/redis cd /usr/local/redis make make install 安装完成后，我们进入目录/usr/local/bin中查看 cd /usr/local/bin ls -all redis-server &amp;amp; 配置 Redis的配置信息在/usr/local/redis/redis.conf下。</description>
    </item>
    
  </channel>
</rss>